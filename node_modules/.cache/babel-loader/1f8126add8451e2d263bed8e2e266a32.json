{"ast":null,"code":"import _objectSpread from\"D:/MERN stack projects/MERN app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/MERN stack projects/MERN app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/MERN stack projects/MERN app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/MERN stack projects/MERN app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{TextField,Button,Typography,Paper}from'@material-ui/core';import{useDispatch,useSelector}from'react-redux';import FileBase from'react-file-base64';import useStyles from'./styles';import{createPost,updatePost}from'../../actions/posts';var Form=function Form(_ref){var currentId=_ref.currentId,setCurrentId=_ref.setCurrentId;var _useState=useState({movietitle:'',director:'',review:'',tags:'',selectedFile:''}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];var post=useSelector(function(state){return currentId?state.posts.find(function(review){return review._id===currentId;}):null;});var dispatch=useDispatch();var classes=useStyles();useEffect(function(){if(post)setPostData(post);},[post]);var clear=function clear(){setCurrentId(0);setPostData({movietitle:'',director:'',review:'',tags:'',selectedFile:''});};var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(currentId===0){dispatch(createPost(postData));clear();}else{dispatch(updatePost(currentId,postData));clear();}case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"form\",{autoComplete:\"off\",noValidate:true,className:\"\".concat(classes.root,\" \").concat(classes.form),onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},currentId?\"Editing \\\"\".concat(post.title,\"\\\"\"):'Add review of your favourite movie'),/*#__PURE__*/React.createElement(TextField,{name:\"movietitle\",variant:\"outlined\",label:\"Movie Title\",fullWidth:true,value:postData.movietitle,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{movietitle:e.target.value}));}}),/*#__PURE__*/React.createElement(TextField,{name:\"director\",variant:\"outlined\",label:\"Directed By\",fullWidth:true,value:postData.director,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{director:e.target.value}));}}),/*#__PURE__*/React.createElement(TextField,{name:\"review\",variant:\"outlined\",label:\"Review\",fullWidth:true,multiline:true,rows:4,value:postData.review,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{review:e.target.value}));}}),/*#__PURE__*/React.createElement(TextField,{name:\"tags\",variant:\"outlined\",label:\"Tags (coma separated)\",fullWidth:true,value:postData.tags,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{tags:e.target.value.split(',')}));}}),/*#__PURE__*/React.createElement(\"div\",{className:classes.fileInput},/*#__PURE__*/React.createElement(FileBase,{type:\"file\",multiple:false,onDone:function onDone(_ref3){var base64=_ref3.base64;return setPostData(_objectSpread(_objectSpread({},postData),{},{selectedFile:base64}));}})),/*#__PURE__*/React.createElement(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",fullWidth:true},\"Submit\"),/*#__PURE__*/React.createElement(Button,{className:classes.buttonClear,variant:\"contained\",color:\"secondary\",size:\"small\",onClick:clear,fullWidth:true},\"Clear\")));};export default Form;","map":{"version":3,"sources":["D:/MERN stack projects/MERN app/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","movietitle","director","review","tags","selectedFile","postData","setPostData","post","state","posts","find","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","paper","root","form","title","target","value","split","fileInput","base64","buttonSubmit","buttonClear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ movietitle: '', director: '', review: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((review) => review._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ movietitle: '', director: '', review: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Add review of your favourite movie'}</Typography>\n        <TextField name=\"movietitle\" variant=\"outlined\" label=\"Movie Title\" fullWidth value={postData.movietitle} onChange={(e) => setPostData({ ...postData, movietitle: e.target.value })} />\n        <TextField name=\"director\" variant=\"outlined\" label=\"Directed By\" fullWidth value={postData.director} onChange={(e) => setPostData({ ...postData, director: e.target.value })} />\n        <TextField name=\"review\" variant=\"outlined\" label=\"Review\" fullWidth multiline rows={4} value={postData.review} onChange={(e) => setPostData({ ...postData, review: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button className={classes.buttonClear} variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}